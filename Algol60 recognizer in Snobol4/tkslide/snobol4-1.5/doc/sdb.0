SDB(1)                                                                  SDB(1)



NNAAMMEE
       sdb - SNOBOL4 debugger

SSYYNNOOPPSSIISS
       ssddbb [ _o_p_t_i_o_n_s ...  ] _p_r_o_g_r_a_m_._s_n_o

DDEESSCCRRIIPPTTIIOONN
       ssddbb  is a debugger for ssnnoobbooll44(1) programs, in the mold (clawning fone)
       of ggddbb(1), The GNU debugger.  ssddbb(1) uses rreeaaddlliinnee(3) for command  line
       editing/history when available.

   CCoommmmaannddss::
       bbrreeaakk _L_A_B_E_L___O_R___S_T_A_T_E_M_E_N_T___N_U_M_B_E_R
         Set a breakpoint.

       bbtt
         Display call stack backtrace.

       ccoommmmaannddss _B_R_E_A_K_P_O_I_N_T___N_U_M_B_E_R
         Add sdb commands to execute (ie; print & continue) to a breakpoint.

       ccoonnddiittiioonn _B_R_E_A_K_P_O_I_N_T___N_U_M_B_E_R _E_X_P_R
         If _E_X_P_R is supplied, it is used as a predicate to make the breakpoint
         conditional.

       ccoonnttiinnuuee _E_M_P_T_Y___O_R___C_O_U_N_T
         Continue from breakpoint.  The  optional  count  specifies  how  many
         times to continue past this breakpoint (sets "ignore" count).

       ddeelleettee _B_R_E_A_K_P_O_I_N_T___N_U_M_B_E_R___O_R___E_M_P_T_Y
         Delete a single breakpoint, or all breakpoints.

       ddiissaabbllee _B_R_E_A_K_P_O_I_N_T___N_U_M_B_E_R___O_R___E_M_P_T_Y
         Temporarily disable a breakpoint, or all breakpoints.

       eennaabbllee _B_R_E_A_K_P_O_I_N_T___N_U_M_B_E_R___O_R___E_M_P_T_Y
         Reenable a breakpoint, or all breakpoints.

       ffiinniisshh
         Resume  debugging after current function returns.  Will display func-
         tion return type and value, if any.

       hheellpp
         Display help.

       iiggnnoorree _B_R_E_A_K_P_O_I_N_T___N_U_M_B_E_R _C_O_U_N_T
         Set breakpoint ignore count.

       iinnffoo
         Display list of breakpoints and their status.

       lliisstt _E_M_P_T_Y___O_R___S_T_A_T_E_M_E_N_T___N_U_M_B_E_R
         Display source code.

       nneexxtt _E_M_P_T_Y___O_R___C_O_U_N_T
         Single step execution, skipping over function calls.

       pprriinntt _E_X_P_R_E_S_S_I_O_N
         Evaluate expression and print result.  Can be used to call functions,
         or set variables.

       qquuiitt
         Exit debugger.

       sstteepp _E_M_P_T_Y___O_R___C_O_U_N_T
         Single step.

       wwaattcchh _V_A_R_I_A_B_L_E
         Set watchpoint on a variable (break when value changes).

       wwhhaatt
         Display the datatype of variable contents (or expression).

       wwhheerree
         An alias for bt.


       A blank line repeats the previous command.

       Non-ambiguous abbreviations of commands can be used (ie; "s", "n").

       The  GNU  Readline  library (when available) will be used for sdb input
       for command editing and history.

       The keyboard interrupt character (eg; Control C) will  stop  a  running
       program and return control to the ssddbb(1) command prompt.

       If  your program calls the SSDDBB(()) function, it will act as a breakpoint.
       You can check whether ssddbb(1) is loaded with the FFUUNNCCTTIIOONN predicate, ie;

                      FUNCTION('SDB') SDB()

SSEEEE AALLSSOO
       ssnnoobbooll44(1), ggddbb(1), rreeaaddlliinnee(3), ssnnoobbooll44rreeaaddlliinnee(3)


AAUUTTHHOORR
       Philip L. Budne

       Inspired by Fred Weigel's DDT.SNO and SSIITTBBOOLL's SNODDT.


NNOOTTAA BBEENNEE
       ssddbb(1) uses a wide variety  of  system  facilities  and  will  interact
       poorly with any programs that use any number of features, including:

       +o      Altering listing settings with directive/control lines.

       +o      Altering &&SSTTLLIIMMIITT, &&EERRRRLLIIMMIITT, or &&TTRRAACCEE.

       +o      Calling SSEETTEEXXIITT(())

BBUUGGSS
       If  you try to put a breakpoint on a label or line with no code or goto
       fields, the breakpoint will never be triggered.

       You cannot put a breakpoint on the EENNDD label  (however  control  always
       returns to sdb when the EENNDD label is reached).

       There is no "run" command; you cannot restart the program without quit-
       ting and losing breakpoint settings.

       Interrupt character trapping is in it's infancy, and only occurs at the
       start of a each statement executed.

       The  interrupt  character  is  silently ignored when at the ssddbb command
       prompt.

       ssddbb does not read an init file (ie; .sdbinit).



SNOBOL                             Sep 2013                             SDB(1)
